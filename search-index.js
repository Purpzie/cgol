var searchIndex = JSON.parse('{\
"cgol":{"doc":"Tests","i":[[0,"game","cgol","Contains the [<code>Game</code>] struct and its iterators.",null,null],[6,"Row","cgol::game","An iterator over the cells in a specific row.",null,null],[6,"RowMut","","A mutable iterator over the cells in a specific row.",null,null],[6,"Col","","An iterator over the cells in a specific column.",null,null],[6,"ColMut","","A mutable iterator over the cells in a specific column.",null,null],[3,"Game","","An instance of Conway\'s Game of Life.",null,null],[11,"new","","Creates a new instance of Conway\'s Game of Life.",0,[[],["game",3]]],[11,"tick","","Ticks once.",0,[[]]],[11,"width","","Gets this game\'s width.",0,[[]]],[11,"height","","Gets this game\'s height.",0,[[]]],[11,"area","","Gets this game\'s area.",0,[[]]],[11,"get","","Gets a specific cell, returning <code>None</code> if out of bounds.",0,[[],[["option",4],["cell",4]]]],[11,"get_mut","","Mutably gets a specific cell, returning <code>None</code> if out of …",0,[[],[["cell",4],["option",4]]]],[11,"get_row","","Gets a slice of a specific row.",0,[[]]],[11,"get_row_mut","","Gets a mutable slice of a specific row.",0,[[]]],[11,"row","","Gets an iterator over the cells in a specific row.",0,[[],["row",6]]],[11,"row_mut","","Gets a mutable iterator over the cells in a specific row.",0,[[],["rowmut",6]]],[11,"col","","Gets an iterator over the cells in a specific column.",0,[[],["col",6]]],[11,"col_mut","","Gets a mutable iterator over the cells in a specific …",0,[[],["colmut",6]]],[11,"clear","","Kills all cells.",0,[[]]],[11,"all_dead","","Returns <code>true</code> if all cells are <code>Dead</code>.",0,[[]]],[11,"all_alive","","Returns <code>true</code> if all cells are <code>Alive</code>.",0,[[]]],[11,"invert","","Inverts all cells.",0,[[]]],[11,"fill_random","","Fills the game\'s cells randomly with a probability of …",0,[[]]],[4,"Cell","cgol","A \\\"cell\\\" which can be alive or dead.",null,null],[13,"Dead","","",1,null],[13,"Alive","","",1,null],[3,"Game","","An instance of Conway\'s Game of Life.",null,null],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"vzip","","",1,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"from","","",1,[[],["cell",4]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"eq","","",1,[[["cell",4]]]],[11,"eq","","",0,[[["game",3]]]],[11,"ne","","",0,[[["game",3]]]],[11,"not","","",1,[[]]],[11,"index","","",0,[[],["cell",4]]],[11,"index_mut","","",0,[[],["cell",4]]],[11,"as_ref","","",0,[[]]],[11,"as_mut","","",0,[[]]],[11,"clone","","",1,[[],["cell",4]]],[11,"clone","","",0,[[],["game",3]]],[11,"default","","",1,[[]]]],"p":[[3,"Game"],[4,"Cell"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);